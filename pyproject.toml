[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vagrantfile-generator"
dynamic = ["version"]
description = "Web application for generating Vagrantfiles"
authors = [{name = "Vagrantfile Generator Team"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "fastapi>=0.104.0",
    "pydantic>=2.5.0",
    "uvicorn[standard]>=0.24.0",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/vagrant/vagrantfile-gui"
Repository = "https://github.com/vagrant/vagrantfile-gui.git"
Issues = "https://github.com/vagrant/vagrantfile-gui/issues"

[tool.hatch.version]
path = "backend/src/__init__.py"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "contract: Contract tests for API endpoints",
    "integration: Integration tests for user scenarios",
    "unit: Unit tests for individual components",
]